The project is being rewritten.
The latest stable version is commit 05e43992d9d118efb77f39f95c7d980f5baaba0b.


Synchronize file trees using version vectors.


A file tree is a directory but the term makes it explicit that we refer to
its entire content, including subdirectories.

To recover from losing data, or to read and modify the data in multiple places,
make multiple file trees and synchronize them.

To detect which tree should replace the other,
or that both have changed and the user must reconcile them,
the program stores metadata in the file .vector-sync in the tree's root.
The leading dot (.) is a Linux convention for such files.
Any other .vector-sync file or directory is an error.
Any empty directory is an error.


§ New tree metadata

{
  "id": "unique name",
  "version_vector": {},
  "file_hashes": {}
}

"version_vector" is {"tree_id": 5, "another_id": 7}
Intuitively, when a tree changes the counter for its "id" is incremented
(or set to 1 if it is absent).

"file_hashes" is {"path/to/file": "hash of content"}


§ Version Vector Operations

X < Y ⇔ X ≠ Y and each ID in X is present in Y with an equal or higher counter.
Intuitively, X is before Y.

{}		< {A:1}
{A:1}		≮ {A:1}
{A:1}		< {A:2, B:3}
{A:1, B:2}	≮ {B:3}
{A:1, B:2}	≮ {A:3, B:1}
{A:1, B:2}	< {A:1, B:3}

X ⊔ Y (join) has all IDs in X and Y.
An ID's counter is the maximum of its counters in X and Y
if it is present in both,
else its counter from X or Y where it is present.
Intuitively, synchronizing version vectors X and Y results in X ⊔ Y.

{A:1} ⊔ {A:2}	= {A:2}
{A:1} ⊔ {B:2}	= {A:1, B:2}
{A:1, B:4, C:2, D:6} ⊔ {B:3, C:2, D:7, E:9} = {A:1, B:4, C:2, D:7, E:9}


§ Synchronizing trees A and B

If a tree differs from its metadata,
increment the counter for its ID in its version vector
(set it to 1 if it is absent).
This is calculated in memory, not written to disk yet.

If the trees are identical, record them, and Va ⊔ Vb, in the metadata.
Else if Va < Vb, use tree B and Vb.
Else if Vb < Va, use tree A and Va.
Else error: the user must reconcile the trees then run the sync again.
