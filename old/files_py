def confirmTreeChange(treeChange, replicaID):
    """
    Ask the user to confirm the change and return bool.

    Returns True without asking for confirmation if the change is empty.
    """
    found = False
    for pathSet, title, char in (
            (treeChange.add,        'New',      '+'),
            (treeChange.delete,     'Deleted',  '−'),
            (treeChange.overwrite,  'Changed',  '≠'),
            ):
        if not pathSet:
            continue
        found = True
        print('•', title, 'files:')
        for path in sorted(pathSet):
            print(char, path)
        print()

    if not found:
        return True

    return input('Make changes to ' + replicaID + '? [y/N] ').upper() == 'Y'


def applyTreeChange(treeChange, *, src, dest):
    """
    Apply the TreeChange to dest, reading files from src.

    It does not accept additional positional arguments:
    >>> applyTreeChange(TreeChange(delete=set(), overwrite=set(), add=set()),
    ...     None, src='s', dest='d')
    Traceback (most recent call last):
    TypeError: applyTreeChange() takes 1 positional argument but 2 positional arguments (and 2 keyword-only arguments) were given
    """
    for path in treeChange.delete:
        delete_up(os.path.join(dest, path))
    for items in (treeChange.overwrite, treeChange.add):
        for path in items:
            copy_down(os.path.join(src, path), os.path.join(dest, path))
